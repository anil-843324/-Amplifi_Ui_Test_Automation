name: Robot Framework - Python
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12.1
        uses: actions/setup-python@v3
        with:
          python-version: 3.12.1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-seleniumlibrary
          pip install robotframework-datadriver
          pip install -U robotframework-datadriver[XLS]

      - name: Test with RobotFramework
        run: robot .

      - name: Test Report Generation
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: Report
          path: |
            report.html
            log.html
            output.xml

      - name: List Files
        run: ls -la

      - name: Compress Reports to Report.zip
        run: |
          python -c "
          import shutil
          import os

          # Define the paths to the report files
          report_files = ['./report.html', './log.html', './output.xml']

          # Ensure all files exist before zipping
          for file_path in report_files:
              if not os.path.exists(file_path):
                  print(f'Error: {file_path} does not exist.')
                  exit(1)

          # Create a .zip archive
          shutil.make_archive('Report', 'zip', '.', 'report.html')
          shutil.make_archive('Report', 'zip', '.', 'log.html')
          shutil.make_archive('Report', 'zip', '.', 'output.xml')

          print('Report.zip created successfully.')
          "

      - name: Send Test Report via Email
        if: success() || failure()
        env:
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        run: |
          python -c "
          import smtplib
          import os
          from email.mime.multipart import MIMEMultipart
          from email.mime.text import MIMEText
          from email.mime.base import MIMEBase
          from email import encoders

          sender_email = 'anilkumarsingh142200@gmail.com'
          receiver_email = 'rathoretushar01@gmail.com'
          subject = 'Robot Framework Test Report'
          app_password = os.getenv('GMAIL_APP_PASSWORD')

          msg = MIMEMultipart()
          msg['From'] = sender_email
          msg['To'] = receiver_email
          msg['Subject'] = subject

          body = 'Please find the attached Robot Framework test report in the zip file.\n\n# Additional information'
          msg.attach(MIMEText(body, 'plain'))

          # Path to the zip file
          zip_path = './Report.zip'

          # Attach the zip file
          with open(zip_path, 'rb') as attachment_file:
              attachment = MIMEBase('application', 'zip')
              attachment.set_payload(attachment_file.read())
          encoders.encode_base64(attachment)
          attachment.add_header('Content-Disposition', f'attachment; filename={os.path.basename(zip_path)}')
          msg.attach(attachment)

          try:
              server = smtplib.SMTP('smtp.gmail.com', 587)
              server.starttls()
              server.login(sender_email, app_password)

              print('Sending email...')
              server.send_message(msg)
              print('Email sent successfully')

              server.quit()
          except Exception as e:
              print(f'Failed to send email: {str(e)}')
          "
